name: Build OpenModSim (Windows x64)

on:
  push:
    tags:
      - 'v*.*.*'
    branches: 
      - main
      - dev

env:
  QT_VERSION: 6.9.2
  QT_ARCH: win64_msvc2022_64
  CMAKE_COMPILER: msvc2022_64
  CMAKE_GENERATOR: "Visual Studio 17 2022"
  CMAKE_ARCH: x64
  BUILD_TYPE: Release

jobs:
  build-omodsim:
    name: Build OpenModSim version ${{ github.event.inputs.version || github.ref_name }}
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.version || github.ref_name }}

      - name: Install Python (for aqtinstall)
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install aqtinstall
        run: |
          python -m pip install aqtinstall

      - name: Install Qt
        run: |
          python -m aqt install-qt windows desktop ${{ env.QT_VERSION }} ${{ env.QT_ARCH }} -O C:\Qt -m qt5compat qtpdf qtserialport qtserialbus
        shell: cmd

      - name: Set BUILD_DIR
        run: |
          echo BUILD_DIR=build-omodsim-Qt_${{ env.QT_VERSION }}_${{ env.CMAKE_COMPILER }}bit-${{ env.BUILD_TYPE }}>>%GITHUB_ENV%
        shell: cmd

      - name: Configure CMake
        run: |
          cmake omodsim -B ${{ env.BUILD_DIR }} -G "${{ env.CMAKE_GENERATOR }}" -A ${{ env.CMAKE_ARCH }} -DCMAKE_PREFIX_PATH="C:/Qt/${{ env.QT_VERSION }}/${{ env.CMAKE_COMPILER }}"
        shell: cmd

      - name: Build
        run: |
          cmake --build ${{ env.BUILD_DIR }} --config ${{ env.BUILD_TYPE }} --parallel
        shell: cmd

      - name: Copy docs
        run: xcopy %CD%\${{ env.BUILD_DIR }}\docs %CD%\${{ env.BUILD_DIR }}\${{ env.BUILD_TYPE }}\docs /E /I /Y
        shell: cmd

      - name: Deploy Qt dependencies using windeployqt
        run: |
          "C:\Qt\${{ env.QT_VERSION }}\${{ env.CMAKE_COMPILER }}\bin\windeployqt.exe" ^
            "%CD%\${{ env.BUILD_DIR }}\${{ env.BUILD_TYPE }}\omodsim.exe" ^
            --release ^
            --no-compiler-runtime ^
            --no-opengl-sw ^
            --plugindir "%CD%\${{ env.BUILD_DIR }}\${{ env.BUILD_TYPE }}\plugins" ^
            --skip-plugin-types help,generic,networkinformation,qmltooling,tls ^
            --exclude-plugins qsqlibase,qsqlmimer,qsqloci,qsqlodbc,qsqlpsql
        shell: cmd

      - name: Install NSIS
        run: |
          choco install nsis -y
        shell: powershell

      - name: Create NSIS installer script
        run: |
          $nsisScript = @"
!include "MUI2.nsh"
!include "LogicLib.nsh"
!include "FileFunc.nsh"

!define MUI_ICON "omodsim.ico"
!define NAME "Open ModSim"
!define PUBLISHER "Alexandr Ananev"
!define APPFILE "omodsim.exe"
!define ICOFILE "omodsim.exe"
!define VERSIONMAJOR 1
!define VERSIONMINOR 9
!define VERSIONBUILD 0
!define VERSION "${VERSIONMAJOR}.${VERSIONMINOR}.${VERSIONBUILD}"
!define PACKAGENAME "omodsim_${VERSION}_x64"
!define SLUG "${NAME} v${VERSION}"
!define UPDATEURL "https://github.com/sanny32/OpenModSim/releases"

Name "${NAME} v${VERSION}"
OutFile "qt6-${PACKAGENAME}.exe"
InstallDir "$PROGRAMFILES64\${NAME}"
RequestExecutionLevel admin

!insertmacro MUI_PAGE_LICENSE "license.txt"
!insertmacro MUI_PAGE_DIRECTORY
!insertmacro MUI_PAGE_INSTFILES

!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES

!insertmacro MUI_LANGUAGE "English"

Section
  SetOutPath $INSTDIR
  File /r "${{ env.BUILD_DIR }}\${{ env.BUILD_TYPE }}\*"
  WriteUninstaller $INSTDIR\uninstall.exe
SectionEnd

Section "Write Registry Information"
  WriteRegStr HKLM64 "Software\Microsoft\Windows\CurrentVersion\Uninstall\${NAME}" "DisplayName" "${NAME}"
  WriteRegStr HKLM64 "Software\Microsoft\Windows\CurrentVersion\Uninstall\${NAME}" "UninstallString" "$\"$INSTDIR\uninstall.exe$\""
  WriteRegStr HKLM64 "Software\Microsoft\Windows\CurrentVersion\Uninstall\${NAME}" "QuietUninstallString" "$\"$INSTDIR\uninstall.exe$\" /S"
  WriteRegStr HKLM64 "Software\Microsoft\Windows\CurrentVersion\Uninstall\${NAME}" "InstallLocation" "$\"$INSTDIR$\""
  WriteRegStr HKLM64 "Software\Microsoft\Windows\CurrentVersion\Uninstall\${NAME}" "DisplayIcon" "$\"$INSTDIR\${ICOFILE}$\""
  WriteRegStr HKLM64 "Software\Microsoft\Windows\CurrentVersion\Uninstall\${NAME}" "Publisher" "${PUBLISHER}"
  WriteRegStr HKLM64 "Software\Microsoft\Windows\CurrentVersion\Uninstall\${NAME}" "URLUpdateInfo" "${UPDATEURL}"
  WriteRegStr HKLM64 "Software\Microsoft\Windows\CurrentVersion\Uninstall\${NAME}" "DisplayVersion" "${VERSION}"
  WriteRegDWORD HKLM64 "Software\Microsoft\Windows\CurrentVersion\Uninstall\${NAME}" "VersionMajor" ${VERSIONMAJOR}
  WriteRegDWORD HKLM64 "Software\Microsoft\Windows\CurrentVersion\Uninstall\${NAME}" "VersionMinor" ${VERSIONMINOR}
  WriteRegDWORD HKLM64 "Software\Microsoft\Windows\CurrentVersion\Uninstall\${NAME}" "NoModify" 1
  WriteRegDWORD HKLM64 "Software\Microsoft\Windows\CurrentVersion\Uninstall\${NAME}" "NoRepair" 1
  ${GetSize} "$INSTDIR" "/S=0K" $0 $1 $2
  IntFmt $0 "0x%08X" $0
  WriteRegDWORD HKLM64 "Software\Microsoft\Windows\CurrentVersion\Uninstall\${NAME}" "EstimatedSize" "$0"
SectionEnd

Section "Visual Studio Runtime"
  SetOutPath "$INSTDIR"
  ExecWait "$INSTDIR\vcredist_msvc2022_x64.exe /install /quiet"
SectionEnd

Section "Desktop Shortcut" DeskShort
    CreateShortCut "$DESKTOP\${NAME}.lnk" "$INSTDIR\${APPFILE}" "" "$INSTDIR\${ICOFILE}"
SectionEnd

Section "Start Menu"
    CreateDirectory "$SMPROGRAMS\${NAME}"
    CreateShortCut "$SMPROGRAMS\${NAME}\${NAME}.lnk" "$INSTDIR\${APPFILE}" "" "$INSTDIR\${ICOFILE}"
SectionEnd

Function un.RMDirUP
  !define RMDirUP '!insertmacro RMDirUPCall'

  !macro RMDirUPCall _PATH
        push '${_PATH}'
        Call un.RMDirUP
  !macroend

  ClearErrors

  Exch $0
  RMDir "$0\.."

  IfErrors Skip
  ${RMDirUP} "$0\.."
  Skip:

  Pop $0
FunctionEnd

Section "Uninstall"
Delete "$DESKTOP\${NAME}.lnk"

RMDir /r "$SMPROGRAMS\${NAME}"

Delete "$INSTDIR\uninstall.exe"

RMDir /r "$INSTDIR"
${RMDirUP} "$INSTDIR"

DeleteRegKey HKLM64 "Software\Microsoft\Windows\CurrentVersion\Uninstall\${NAME}"
DeleteRegKey HKCU64 "Software\${NAME}"
SectionEnd
"@
          Set-Content -Path "omodsim.nsi" -Value $nsisScript
        shell: powershell

      - name: Build NSIS installer
        run: |
          makensis omodsim.nsi
        shell: cmd

       - name: Upload Installer
        uses: actions/upload-artifact@v4
        if: success()
        with:
          path: qt6-omodsim*.exe