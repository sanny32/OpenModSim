name: Build Debian package (Ubuntu x64, Qt6)

on:
  push:
    tags:
      - "*"
    branches: [ dev ]

jobs:
  build-omodsim:
    name: Build OpenModSim deb package version '${{ github.ref_name }}' with Qt6
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04

    env:
      QT_VERSION: "6.9.3"
      QT_HOST: "linux"
      QT_TARGET: "desktop"
      QT_ARCH: "linux_gcc_64"
      QT_INSTALL_DIR: "/opt/Qt"
      CMAKE_COMPILER: "gcc_64"
      CMAKE_GENERATOR: "Ninja"
      BUILD_TYPE: "Release"
      DEB_REVISION: "1"
      DEB_ARCH: "amd64"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Extract version from CMakeLists.txt
        id: extract_version
        run: |
          FULL_VERSION=$(grep -oP 'VERSION\s+\K[0-9]+\.[0-9]+\.[0-9]+' omodsim/CMakeLists.txt)

          if [[ "${GITHUB_REF_NAME}" == "dev" ]]; then
            MAJOR_MINOR=$(echo "$FULL_VERSION" | cut -d. -f1,2)
            APP_VERSION="${MAJOR_MINOR}~dev"
          else
            APP_VERSION="$FULL_VERSION"
          fi

          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
          echo "Extracted version: $APP_VERSION"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential ninja-build cmake python3-pip \
            dh-make debhelper debhelper-compat lintian fakeroot \
            libgl1-mesa-dev libxkbcommon-x11-0 \
            libxcb-xinerama0 libxcb-cursor0 libxcb-keysyms1 libxcb-xfixes0 \
            libxcb-shape0 libxcb-render-util0 libxcb-icccm4 libxcb-image0 \
            zlib1g-dev libpng-dev libjpeg-dev

      - name: Install aqtinstall
        run: |
          python3 -m pip install -U pip aqtinstall

      - name: Download Qt
        run: |
          sudo mkdir -p ${{ env.QT_INSTALL_DIR }}
          sudo chown $USER ${{ env.QT_INSTALL_DIR }}
          aqt install-qt \
            ${{ env.QT_HOST }} \
            ${{ env.QT_TARGET }} \
            ${{ env.QT_VERSION }} \
            ${{ env.QT_ARCH }} \
            -m qt5compat qtpdf qtserialport qtserialbus \
            -O ${{ env.QT_INSTALL_DIR }}

      - name: Add Qt to PATH
        run: echo "${{ env.QT_INSTALL_DIR }}/${{ env.QT_VERSION }}/${{ env.CMAKE_COMPILER }}/bin" >> $GITHUB_PATH

      - name: Set BUILD_DIR
        run: echo "BUILD_DIR=build-omodsim-Qt_${{ env.QT_VERSION }}_${{ env.CMAKE_COMPILER }}bit-${{ env.BUILD_TYPE }}" >> $GITHUB_ENV

      - name: Configure project
        run: |
            cmake omodsim -B ${{ env.BUILD_DIR }} \
            -G "${{ env.CMAKE_GENERATOR }}" \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -DCMAKE_PREFIX_PATH=${{ env.QT_INSTALL_DIR }}/${{ env.QT_VERSION }}/${{ env.CMAKE_COMPILER }}

      - name: Build
        run: cmake --build ${{ env.BUILD_DIR }} --config ${{ env.BUILD_TYPE }} --parallel

      - name: Set BUILD_DEB_DIR
        run: echo "BUILD_DEB_DIR=build-deb-package-Qt_${{ env.QT_VERSION }}_${{ env.CMAKE_COMPILER }}bit" >> $GITHUB_ENV

      - name: Set DEB_SRC_DIR
        run: echo "DEB_SRC_DIR=${{ env.BUILD_DEB_DIR }}/qt6-omodsim-${{ env.APP_VERSION }}-${{ env.DEB_REVISION }}_${{ env.DEB_ARCH }}" >> $GITHUB_ENV

      - name: Create DEB build directories
        run: mkdir -p ${{ env.DEB_SRC_DIR }}
          
      - name: Copy files to DEB_SRC_DIR
        run: cp -r .deb/* ${{ env.DEB_SRC_DIR }}/
         
      - name: Install cqtdeployer
        run: |
          wget -q https://github.com/QuasarApp/CQtDeployer/releases/download/v1.6.2365/CQtDeployer_1.6.2365.7cce7f3_Linux_x86_64.deb
          sudo dpkg -i CQtDeployer_1.6.2365.7cce7f3_Linux_x86_64.deb
          rm CQtDeployer_1.6.2365.7cce7f3_Linux_x86_64.deb

      - name: Bundle Qt libraries and plugins throught cqtdeployer
        run: |
          cqtdeployer -bin ${{ env.BUILD_DIR }}/omodsim \
            -targetDir ${{ env.DEB_SRC_DIR }}/opt/OpenModSim \
            -libDir ${{ env.QT_INSTALL_DIR }}/${{ env.QT_VERSION }}/${{ env.CMAKE_COMPILER }}/lib \
            -ignore libcrypto.so.3,libmysqlclient.so.21,libpq.so.5,libssl.so.3 \
            -extraLibs icudata,icui18n,icuuc

      - name: Debug view OpenModSim/lib directory (action must be removed after developing ended)
        run: ls -la ${{ env.DEB_SRC_DIR }}/opt/OpenModSim/lib

      - name: Create Debian changelog
        run: |
          cat > "${{ env.DEB_SRC_DIR }}/debian/changelog" <<EOF
          qt6-omodsim (${{ env.APP_VERSION }}-${{ env.DEB_REVISION }}) stable; urgency=medium

            * Version ${{ env.APP_VERSION }}

           -- Alexandr Ananev <mail@ananev.org>  $(date -R)
          EOF

      - name: Create Debian copyrigth
        run: |
          cat > "${{ env.DEB_SRC_DIR }}/debian/copyright" <<EOF
          Format: https://www.debian.org/doc/packaging-manuals/copyright-format/1.0/
          Upstream-Name: qt6-omodsim
          Source: none

          Files: *
          Copyright: $(date +%Y) Alexandr Ananev <mail@ananev.org>
          License: MIT
          EOF

      - name: Patch binary file
        run: patchelf --set-rpath /opt/OpenModSim/lib "${{ env.DEB_SRC_DIR }}/opt/OpenModSim/bin/omodsim"

      - name: Build DEB package
        working-directory: ${{ env.DEB_SRC_DIR }}
        run: dpkg-buildpackage -us -uc -tc -b

      - name: Upload DEB package
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: qt6-omodsim_${{ env.APP_VERSION }}-${{ env.DEB_REVISION }}_${{ env.DEB_ARCH }}
          path: ${{ env.BUILD_DEB_DIR }}/qt6-omodsim_${{ env.APP_VERSION }}-${{ env.DEB_REVISION }}_${{ env.DEB_ARCH }}.deb
